# Урок 2

# 1. Выяснить тип результата выражений:
# 15 * 3
# 15 / 3
# 15 // 2
# 15 ** 2
print('Задача 1\n')
print(f'Тип результата выражения 15 * 3: {type(15 * 3)}')
print(f'Тип результата выражения 15 / 3: {type(15 / 3)}')
print(f'Тип результата выражения 15 // 3: {type(15 // 3)}')
print(f'Тип результата выражения 15 ** 3: {type(15 ** 3)}')
print('\n')

# 2. Дан список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем)
# кавычками (добавить кавычку до и кавычку после элемента списка, являющегося числом) и
# дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
#
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов


# 3. * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place).
# Эта задача намного серьёзнее, чем может сначала показаться.

print('Задача 2-3\n')

list_in = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
print((' ').join(f'"{f"0{i}" if len(str(i)) < 2 else i}"' if i.isdigit() else
            f'"{f"+0{i[1]}"}"' if not i.find('+') else i for i in list_in))

print('\n')

# 4. Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']

# Известно, что имя сотрудника всегда в конце строки.
# Сформировать и вывести на экран фразы вида: 'Привет, Игорь!'

print('Задача 4\n')

list_in = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
list_names = [f'{i.split(" ")[-1:][0]}'.lower() for i in list_in]

for i in list_names:
    print(f'Привет, {i.capitalize()}!')

print('\n')

# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
#
# Вывести на экран эти цены через запятую в одну строку,
# цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например,
# получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).

# Вывести цены, отсортированные по возрастанию, новый список не создавать
# (доказать, что объект списка после сортировки остался тот же).

# Создать новый список, содержащий те же цены, но отсортированные по убыванию.

# Вывести цены пяти самых дорогих товаров.
#
# Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

print('Задача 5\n')

list_price = [6.67, 1.54, 2.82, 4.10, 11.79,
              0.26,  7.95, 9.23, 10.51,5.38,
              13.08, 16.92, 18.21, 14.36, 15.64]

print("Выводим цены в указанном виде:")
for i in list_price:
    print("{} руб {:02} коп".format(str(i).split('.')[0], str(i).split('.')[1]))

id_list_before_sorted = id(list_price)

print("\nВыводим цены, отсортированные по возрастанию:")
list_price.sort()
for i in list_price:
    print("{} руб {:02} коп".format(str(i).split('.')[0], str(i).split('.')[1]))

print("\nДоказываем, что объект списка после сортировки остался тот же:")
id_list_after_sorted = id(list_price)
if id_list_before_sorted == id_list_after_sorted:
    print('Это один и тот же объект')
else:
    print('Это разные объекты')

print("\nВыводим отсортированный, по убыванию, новый список:")
new_list_price = sorted(list_price, reverse=True)
print(f'{new_list_price}')

print("\nВыводим цены пяти самых дорогих товаров:")
for i in new_list_price[0:5]:
    print("{} руб {:02} коп".format(str(i).split('.')[0], str(i).split('.')[1]))

print("\nВыводим цены пяти самых дорогих товаров по возрастанию, написав минимум кода:")
for i in new_list_price[4::-1]:
    print("{} руб {:02} коп".format(str(i).split('.')[0], str(i).split('.')[1]))
